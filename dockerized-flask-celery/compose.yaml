networks:
  demo:

volumes:
  db-storage:

secrets:
  db-password:
    file: db-password.txt

services:

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    networks:
      - demo

  db:
    image: mysql:8.0-bookworm
    environment:
      - MYSQL_DATABASE=demo
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 3306:3306
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db-password)" --silent']
      interval: 3s
      retries: 10
      start_period: 5s
    networks:
      - demo
    secrets:
      - db-password
    volumes:
      - db-storage:/var/lib/mysql

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    networks:
      - demo
    environment:
      FLASK_APP: server.py
    command:
     - bash
     - -c
     - |
       # TODO flask db upgrade
       flask create-all
       # TODO gunicorn
       flask run --host=0.0.0.0
    depends_on:
      db:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - demo
    command: celery -A server.celery worker --loglevel=INFO
    depends_on:
      web:
        condition: service_started

